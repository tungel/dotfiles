#!/bin/bash

# https://github.com/tungel/dotfiles

# kill all the bspc process first
kill -9 $(ps aux | grep bspc | sed 's/\s\+/ /g' | cut -d' ' -f2 | xargs)

if [[ -e $TLPC ]]; then
    # for 4k monitor
    export PANEL_HEIGHT=30
else
    export PANEL_HEIGHT=18
fi

# For newly plugged in monitor to be recognized by bspwm, we must first run:
#   xrandr --output HDMI1 --mode 1920x1080
# then run:
#   ~/.config/bspwm/bspwmrc

INTERNAL_MONITOR=$(xrandr --listmonitors | awk '/eDP/ {print $NF}')
xrandr --auto
# num_mon=$(bspc query -M | wc -l)

# use xrandr to determine number of monitors because `bspc query -M` still shows
# 2 monitors even when the external monitor was disconnected
num_mon=$(xrandr | awk '/ connected / { print $1 }' | wc -l)

if [ $num_mon -gt 1 ] ; then
    if [[ -e $TLPC ]]; then
        # xrandr --output HDMI-0 --primary
        # xrandr --output DVI-I-1 --right-of HDMI-0

        # # trying to scale the low res monitor to match with the HiDPI monitor
        # # (4k), but the result is not acceptable, the font is so blurry
        # # scale 2x2 will make the whole screen black !!!
        # # xrandr --output DVI-I-1 --mode 1920x1080 --scale 2.0005x2.0005 --right-of HDMI-0

        # # give 3 desktops to the 1st monitor
        # bspc monitor DVI-I-1 -d 1 2 3
        # bspc config -m ^1 top_padding 10

        # # the rest of the desktops are for 2nd monitor
        # bspc monitor HDMI-0 -d 4 5 6 7 8 9 10
        # bspc config -m ^2 top_padding 10

        # new 2 monitors
        # xrandr --output DVI-D-0
        # xrandr --output DVI-I-1 --primary --right-of DVI-D-0
        # xrandr --output DVI-I-1 --primary
        # xrandr --output DVI-D-0 --left-of DVI-I-1
        # give 3 desktops to the 1st monitor
        # bspc monitor DVI-I-1 -d 1 2 3 4 5 6 7 8 9
        # bspc config -m ^1 top_padding 10

        # the rest of the desktops are for 2nd monitor
        # bspc monitor DVI-D-0 -d 10
        # bspc config -m ^2 top_padding 10

        # xrandr --output DP-0 --primary
        # xrandr --output HDMI-0 --right-of DP-0
        # xrandr --output DP-0 --auto --primary --pos 0x0 --panning 3840x2160+0+0 --output HDMI-0 --auto --right-of DP-0 --panning 1920x1080+3840+0

        # # give 3 desktops to the 1st monitor
        # bspc monitor DP-0 -d 1 2 3 4 5 6 7 8 9
        # bspc config -m ^1 top_padding 10
        # # the rest of the desktops are for 2nd monitor
        # bspc monitor HDMI-0 -d 10
        # bspc config -m ^2 top_padding 10

        # xrandr --output DP1 --auto --primary
        # xrandr --output LVDS1 --off
        # bspc monitor DP1 --reset-desktops 1 2 3 4 5 6 7 8 9
        ## bspc config -m ^2 top_padding 10

        # Find connected monitors, excluding the built-in display (eDP-*), and return the first match
        EXTERNAL_MONITOR=$(xrandr | awk '/ connected / && $1 !~ /^eDP/ { print $1; exit }')
        
        # xrandr --output DP-4.1
        xrandr --output $EXTERNAL_MONITOR
        xrandr --output $INTERNAL_MONITOR --right-of $EXTERNAL_MONITOR --primary

        bspc monitor ^1 --reset-desktops 1 2 3 4 5 6 7
        bspc monitor ^2 --reset-desktops 8 9 10
        bspc config -m ^2 top_padding 20
    else
        # for VirtualBox at work
        xrandr --output VGA-1 --primary
        xrandr --output VGA-2 --right-of VGA-1

        # allocate desktop for first monitor
        bspc monitor ^1 --reset-desktops 1 2 3
        bspc config -m ^1 top_padding 10

        # allocate desktop for second monitor
        bspc monitor ^2 --reset-desktops web 5 6 7 8 9 10
        bspc config -m ^2 top_padding 10
    fi
else
    xrandr --output $INTERNAL_MONITOR --primary
    bspc monitor ^1 --reset-desktops 1 2 3 4 5 6 7 8 9 10
    bspc config -m ^1 top_padding 20
fi


# move the focus to the main monitor
bspc monitor -f primary

bspc config split_ratio             0.50
bspc config border_width            1
# bspc config top_padding             10
bspc config borderless_monocle      true
bspc config gapless_monocle         true
# bspc config focus_follows_pointer   false
# bspc config focus_by_distance       true
# bspc config auto_cancel             true
# bspc config normal_border_color     none
bspc config active_border_color     "#504339"
bspc config focused_border_color    "#ff8000"
# bspc config presel_border_color     none
# bspc config urgent_border_color     "#504339"
bspc config click_to_focus          true

#*******************************************************************************
# Rules
#*******************************************************************************
# bspc rule -a Thunderbird desktop=^1

bspc rule -a Firefox desktop=^4

bspc rule -a "Foxit Reader" desktop=^5
bspc rule -a "PDFXCview.exe" desktop=^5

# for matlab figure: make the figure window floating by default
# use: xprop | grep WM_CLASS to get the class title
bspc rule -a sun-awt-X11-XFramePeer floating=on

bspc rule -a Steam desktop=^5 floating=on

# fix Zathura pdf reader starts as floating
bspc rule -a Zathura state=tiled
#*******************************************************************************

# # kill all panel scripts from bspwm directory such as ~/.config/bspwm/{panel-dzen2,panel.sh}
# # OR the panel FIFO at /tmp/panel-fifo
# kill -9 $(ps aux | grep -e "bspwm.*panel\|tmp/panel-fifo" | sed 's/\s\+/ /g' | cut -d' ' -f2 | xargs)

# # kill existing processes
# pkill dzen2
# pkill xtitle
# pkill panel.sh
# pkill panel-dzen2.sh
# pkill trayer

# # run panel
# ~/.config/bspwm/panel.sh &

# sleep 2; # wait for panel to show up first (bar or dzen2)

# trayer --edge top --align right --SetDockType true \
#         --SetPartialStrut true  \
#         --expand true \
#         --width 10 \
#         --transparent true \
#         --alpha 0 \
#         --tint 0x000000 \
#         --height $PANEL_HEIGHT &

# network manager applet icon
sleep 1
pkill nm-applet
sleep 1
# `which nm-applet` &
nm-applet &


# ==============================================================================
# launching polybar...

# for HiDPI display, run this:
# ~/.config/polybar/launch.sh hidpi

# for low DPI display, run:
~/.config/polybar/launch.sh

